generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  nome         String?
  empresa      String?
  telefone     String?
  role         String        @default("user")
  
  equipamentos Equipamento[]
  manutencoes  Manutencao[]  // ✅ RELAÇÃO SIMPLES
  categorias   Categoria[]
  plantas      Planta[]
  documentos   Documento[]
  
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("users")
}

model Categoria {
  id           Int           @id @default(autoincrement())
  nome         String
  descricao    String?
  equipamentos Equipamento[]
  userId       Int
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("categorias")
}

model Equipamento {
  id            Int          @id @default(autoincrement())
  nome          String
  tag           String?
  modelo        String?
  fabricante    String?
  numeroSerie   String?
  localizacao   String?
  area          String?
  unidade       String?
  disciplina    String?
  detalhes      String?
  dataAquisicao DateTime?
  status        String       @default("ativo")
  categoriaId   Int?
  categoria     Categoria?   @relation(fields: [categoriaId], references: [id])
  userId        Int
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  manutencoes   Manutencao[]
  documentos    Documento[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@map("equipamentos")
}

// ✅ MANUTENÇÃO CORRIGIDA
model Manutencao {
  id            Int                   @id @default(autoincrement())
  codigo        String                @unique
  titulo        String
  descricao     String?
  tipo          String                @default("preventiva")
  status        String                @default("recebida")
  criticidade   String                @default("media")
  prioridade    String                @default("media")
  dataHora      DateTime?
  dataInicio    DateTime?
  dataFim       DateTime?
  dataPrimeiraRevisao    DateTime?
  dataProximaManutencao  DateTime?
  solicitante   String?
  responsavel   String?
  observacoes   String?
  arquivada     Boolean               @default(false)
  
  equipamentoId Int?
  equipamento   Equipamento?          @relation(fields: [equipamentoId], references: [id])
  
  userId        Int                   // ✅ AUTOR DA MANUTENÇÃO
  user          User                  @relation(fields: [userId], references: [id]) // ✅ RELAÇÃO SIMPLES
  
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt

  @@map("manutencoes")
}

model Documento {
  id             Int          @id @default(autoincrement())
  nome           String
  descricao      String?
  titulo         String?
  tipo           String?
  versao         Int?
  revisao        String?
  arquivo        String?
  fileName       String?
  pdfFileName    String?
  tipoArquivo    String?
  tamanho        Int?
  tamanhoArquivo Int?
  url            String?
  caminhoArquivo String?
  equipamentoId  Int?
  equipamento    Equipamento? @relation(fields: [equipamentoId], references: [id])
  userId         Int
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@map("documentos")
}

// ✅ PLANTAS CORRIGIDAS
model Planta {
  id          Int              @id @default(autoincrement())
  titulo      String
  descricao   String?
  imageUrl    String
  imagePath   String?
  fileName    String?
  ativa       Boolean          @default(true)
  userId      Int
  user        User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  marcadores  MarcadorPlanta[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@map("plantas")
}

model MarcadorPlanta {
  id        Int      @id @default(autoincrement())
  texto     String
  url       String?
  cor       String   @default("#ef4444")
  posicaoX  Float
  posicaoY  Float
  ativo     Boolean  @default(true)
  plantaId  Int
  planta    Planta   @relation(fields: [plantaId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("marcadores_plantas")
}
